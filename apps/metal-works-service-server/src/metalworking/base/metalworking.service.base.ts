/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Metalworking as PrismaMetalworking } from "@prisma/client";

export class MetalworkingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MetalworkingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.metalworking.count(args);
  }

  async metalworkings(
    args: Prisma.MetalworkingFindManyArgs
  ): Promise<PrismaMetalworking[]> {
    return this.prisma.metalworking.findMany(args);
  }
  async metalworking(
    args: Prisma.MetalworkingFindUniqueArgs
  ): Promise<PrismaMetalworking | null> {
    return this.prisma.metalworking.findUnique(args);
  }
  async createMetalworking(
    args: Prisma.MetalworkingCreateArgs
  ): Promise<PrismaMetalworking> {
    return this.prisma.metalworking.create(args);
  }
  async updateMetalworking(
    args: Prisma.MetalworkingUpdateArgs
  ): Promise<PrismaMetalworking> {
    return this.prisma.metalworking.update(args);
  }
  async deleteMetalworking(
    args: Prisma.MetalworkingDeleteArgs
  ): Promise<PrismaMetalworking> {
    return this.prisma.metalworking.delete(args);
  }
}
